{"version":3,"sources":["User.js","Comment.js","CommentList.js","Post.js","PostList.js","serverLoad.js","App.js","index.js"],"names":["User","_ref","currentUser","react_default","a","createElement","name","username","email","Comment","dataComment","className","body","CommentList","state","isLoaded","isLoading","handleClickHide","_this","setState","setTimeout","handleClick","this","type","onClick","props","currentComment","map","comment","src_Comment","key","id","React","Component","Post","dataPost","src_User","user","title","src_CommentList","comments","PostList","postsCurrent","post","src_Post","getPosts","Object","asyncToGenerator","regenerator_default","mark","_callee","response","currentPost","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","apply","arguments","getUsers","_ref2","_callee2","currentUsers","_context2","getComments","_ref3","_callee3","_context3","App","listOfPosts","posts","users","userWhitpostAndComments","objectSpread","find","userId","filter","postId","handleSearch","someType","search","target","value","prevState","world","join","toLowerCase","includes","placeholder","onChange","src_PostList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.e0abd724.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst User = ({ currentUser }) => (\n  <div>\n    <p>{currentUser.name}</p>\n    <p>{currentUser.username}</p>\n    <p>{currentUser.email}</p>\n  </div>\n);\n\nUser.propTypes = {\n  currentUser: PropTypes.shape({\n    name: PropTypes.string,\n    username: PropTypes.string,\n    email: PropTypes.string,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Comment = ({ dataComment }) => (\n  <pre className=\"App__comment\">\n    <h3>{dataComment.email}</h3>\n    <p>Comment:</p>\n    <p>{dataComment.body}</p>\n  </pre>\n);\n\nComment.propTypes = {\n  dataComment: PropTypes.shape({\n    body: PropTypes.string,\n    name: PropTypes.string,\n    email: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Comment from './Comment';\n\nclass CommentList extends React.Component {\n  state = {\n    isLoaded: false,\n    isLoading: false,\n  }\n\n  handleClickHide = () => {\n    this.setState({\n      isLoading: false,\n    });\n\n    setTimeout(() => {\n      this.setState({\n        isLoaded: false,\n        isLoading: true,\n      });\n    }, 10);\n  };\n\n  handleClick = () => {\n    this.setState({\n      isLoading: true,\n    });\n\n    setTimeout(() => {\n      this.setState({\n        isLoaded: true,\n        isLoading: false,\n      });\n    }, 10);\n  }\n\n  render() {\n    return (\n      <div className=\"App__comment_list\">\n        { this.state.isLoaded\n          ? (\n            <div>\n              <button\n                type=\"button\"\n                onClick={this.handleClickHide}\n              >\n                { this.state.isLoading ? 'Loading' : 'Hide Comment' }\n              </button>\n              {this.props.currentComment.map(comment => (\n                <Comment dataComment={comment} key={comment.id} />\n              ))}\n            </div>\n          )\n          : (\n            <button\n              type=\"button\"\n              onClick={this.handleClick}\n            >\n              { this.state.isLoading ? 'Comment' : 'Comment' }\n            </button>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nCommentList.propTypes = {\n  currentComment: PropTypes.arrayOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.object])).isRequired,\n};\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\nimport CommentList from './CommentList';\n\nconst Post = ({ dataPost }) => (\n  <div className=\"App__data--post\">\n    <User currentUser={dataPost.user} key={dataPost.user.id} />\n    <h1 className=\"App__title\">{dataPost.title}</h1>\n    <p className=\"App__body\">{dataPost.body}</p>\n    <CommentList currentComment={dataPost.comments} />\n  </div>\n);\n\nPost.propTypes = {\n  dataPost: PropTypes.shape({\n    title: PropTypes.string,\n    body: PropTypes.string,\n    user: PropTypes.object,\n    comments: PropTypes.object,\n  }).isRequired,\n};\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Post from './Post';\n\nconst PostList = ({ postsCurrent }) => (\n  <div className=\"App__container\">\n    {postsCurrent.map(post => (\n      <Post dataPost={post} key={postsCurrent.id} />\n    ))}\n  </div>\n);\n\nPostList.propTypes = {\n  postsCurrent: PropTypes.arrayOf(PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.object])).isRequired,\n};\n\nexport default PostList;\n","export const getPosts = async() => {\n  const response = await fetch('https://jsonplaceholder.typicode.com/posts');\n  const currentPost = await response.json();\n\n  return currentPost;\n};\n\nexport const getUsers = async() => {\n  const response = await fetch('https://jsonplaceholder.typicode.com/users');\n  const currentUsers = await response.json();\n\n  return currentUsers;\n};\n\nexport const getComments = async() => {\n  const response = await fetch('https://jsonplaceholder.typicode.com/comments');\n  const currentComment = await response.json();\n\n  return currentComment;\n};\n","import React from 'react';\nimport './App.css';\nimport PostList from './PostList';\nimport { getPosts, getUsers, getComments } from './serverLoad';\n\nclass App extends React.Component {\n  state = {\n    listOfPosts: [],\n    isLoaded: false,\n    isLoading: false,\n    posts: [],\n  };\n\n  handleClick = async() => {\n    const comments = await getComments();\n    const posts = await getPosts();\n    const users = await getUsers();\n    const userWhitpostAndComments = posts.map(post => ({\n      ...post,\n      user: users.find(user => user.id === post.userId),\n      comments: comments.filter(comment => comment.postId === post.id),\n    }));\n\n    this.setState({\n      posts: userWhitpostAndComments,\n      listOfPosts: userWhitpostAndComments,\n      isLoading: true,\n    });\n\n    setTimeout(() => {\n      this.setState({\n        isLoaded: true,\n        isLoading: false,\n      });\n    }, 10);\n  };\n\n  handleSearch = (someType) => {\n    const search = someType.target.value;\n\n    this.setState(prevState => ({\n      listOfPosts: prevState.posts.filter(\n        world => [world.title, world.body]\n          .join('')\n          .toLowerCase()\n          .includes(search.toLowerCase())\n      ),\n    }));\n  }\n\n  render() {\n    return (\n      <div>\n        { this.state.isLoaded ? (\n          <div className=\"App\">\n            <input\n              type=\"text\"\n              className=\"search_input\"\n              placeholder=\"Search for\"\n              onChange={this.handleSearch}\n            />\n            <PostList postsCurrent={this.state.listOfPosts} />\n          </div>\n        ) : (\n          <button type=\"button\" onClick={this.handleClick}>\n            {this.state.isLoading ? 'Loading...' : 'Load'}\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}